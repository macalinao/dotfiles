# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, ... }:

{
  imports =
    [ <nixpkgs/nixos/modules/installer/scan/not-detected.nix>
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_storage" "sd_mod" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/d83d6906-f53f-417b-a080-e2b05f5990b8";
      fsType = "btrfs";
      options = [ "subvol=nixos" ];
    };

  boot.initrd.luks.devices."cryptroot".device = "/dev/disk/by-uuid/ea26aee0-c2c4-4211-8bec-9551913c0a56";

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/ADA4-EB17";
      fsType = "vfat";
    };

  fileSystems."/var/lib/docker/btrfs" =
    { device = "/nixos/var/lib/docker/btrfs";
      fsType = "none";
      options = [ "bind" ];
    };

  fileSystems."/var/lib/docker/containers/3d36c1eb08a5616c2cf5af98d347c4555b6a8ce30d9ac2de0e3412c65c9f5fa3/mounts/shm" =
    { device = "shm";
      fsType = "tmpfs";
    };

  swapDevices = [
    { device = "/dev/disk/by-uuid/04701011-2d17-4b5e-b29f-ed7d52f10a81"; }
  ];

  nix.maxJobs = lib.mkDefault 8;
  powerManagement.cpuFreqGovernor = lib.mkDefault "powersave";

  services.xserver.videoDrivers = [ "nvidia" ];
  hardware.nvidia.optimus_prime.enable = true;
  # Bus ID of the NVIDIA GPU. You can find it using lspci
  hardware.nvidia.optimus_prime.nvidiaBusId = "PCI:1:0:0";
  # Bus ID of the Intel GPU. You can find it using lspci
  hardware.nvidia.optimus_prime.intelBusId = "PCI:0:2:0";

  # Use the systemd-boot EFI boot loader.
  boot.loader.systemd-boot.enable = true;
  boot.loader.efi.canTouchEfiVariables = true;
}
